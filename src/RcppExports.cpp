// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// firstWeightMatrix
NumericMatrix firstWeightMatrix(NumericMatrix Z);
RcppExport SEXP _linearFeedbackModel_firstWeightMatrix(SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(firstWeightMatrix(Z));
    return rcpp_result_gen;
END_RCPP
}
// qMu
List qMu(NumericVector theta, IntegerMatrix idx, int nT, NumericMatrix data);
RcppExport SEXP _linearFeedbackModel_qMu(SEXP thetaSEXP, SEXP idxSEXP, SEXP nTSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(qMu(theta, idx, nT, data));
    return rcpp_result_gen;
END_RCPP
}
// quasiDifference
NumericVector quasiDifference(NumericVector theta, IntegerMatrix idx, int nT, NumericMatrix data);
RcppExport SEXP _linearFeedbackModel_quasiDifference(SEXP thetaSEXP, SEXP idxSEXP, SEXP nTSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(quasiDifference(theta, idx, nT, data));
    return rcpp_result_gen;
END_RCPP
}
// GMM
double GMM(NumericVector theta, IntegerMatrix idx, int nT, NumericMatrix data, NumericMatrix Z, NumericMatrix W);
RcppExport SEXP _linearFeedbackModel_GMM(SEXP thetaSEXP, SEXP idxSEXP, SEXP nTSEXP, SEXP dataSEXP, SEXP ZSEXP, SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(GMM(theta, idx, nT, data, Z, W));
    return rcpp_result_gen;
END_RCPP
}
// quasiDifference2
NumericVector quasiDifference2(NumericVector theta, IntegerMatrix idx, int nT, NumericMatrix data);
RcppExport SEXP _linearFeedbackModel_quasiDifference2(SEXP thetaSEXP, SEXP idxSEXP, SEXP nTSEXP, SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(quasiDifference2(theta, idx, nT, data));
    return rcpp_result_gen;
END_RCPP
}
// secondWeightMatrix
NumericMatrix secondWeightMatrix(NumericVector theta, IntegerMatrix idx, int nT, NumericMatrix data, NumericMatrix Z);
RcppExport SEXP _linearFeedbackModel_secondWeightMatrix(SEXP thetaSEXP, SEXP idxSEXP, SEXP nTSEXP, SEXP dataSEXP, SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< int >::type nT(nTSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(secondWeightMatrix(theta, idx, nT, data, Z));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_linearFeedbackModel_firstWeightMatrix", (DL_FUNC) &_linearFeedbackModel_firstWeightMatrix, 1},
    {"_linearFeedbackModel_qMu", (DL_FUNC) &_linearFeedbackModel_qMu, 4},
    {"_linearFeedbackModel_quasiDifference", (DL_FUNC) &_linearFeedbackModel_quasiDifference, 4},
    {"_linearFeedbackModel_GMM", (DL_FUNC) &_linearFeedbackModel_GMM, 6},
    {"_linearFeedbackModel_quasiDifference2", (DL_FUNC) &_linearFeedbackModel_quasiDifference2, 4},
    {"_linearFeedbackModel_secondWeightMatrix", (DL_FUNC) &_linearFeedbackModel_secondWeightMatrix, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_linearFeedbackModel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
